<?xml version="1.0" encoding="UTF-8"?>
<xwikidoc>
<web>XWiki</web>
<name>Calendar</name>
<language></language>
<defaultLanguage>en</defaultLanguage>
<translation>0</translation>
<parent></parent>
<creator>XWiki.Admin</creator>
<author>XWiki.Admin</author>
<customClass></customClass>
<contentAuthor>XWiki.Admin</contentAuthor>
<creationDate>1386326619000</creationDate>
<date>1386583040000</date>
<contentUpdateDate>1386583040000</contentUpdateDate>
<version>5.97</version>
<title></title>
<defaultTemplate></defaultTemplate>
<validationScript></validationScript>
<comment></comment>
<minorEdit>true</minorEdit>
<syntaxId>xwiki/2.1</syntaxId>
<hidden>false</hidden><attachment>
<filename>dot.png</filename>
<filesize>2801</filesize>
<author>XWiki.Admin</author>
<date>1386532211000</date>
<version>1.3</version>
<comment></comment><content>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
SUVORK5CYII=
</content></attachment>
<object>
<class>
<name>XWiki.JavaScriptExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.Calendar</name>
<number>0</number>
<className>XWiki.JavaScriptExtension</className>
<guid>7f129bc3-d2e0-46ed-8b6f-c6ecac42aa0d</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>var calendar = Class.create
({
  selectedMonth: new Date().getMonth(),
  selectedYear:  new Date().getFullYear(),
  selectedDay:   new Date().getDate(),
  firstDay:      6, //sunday
  calendarId:    'calendarPanel',

  initialize: function ()
  {
    Event.observe(this.calendarId, 'click', this.calendarClicked.bindAsEventListener(this));
  },

  calendarClicked: function (evt)
  {
    cElem = Event.element(evt);

    if(cElem.hasClassName('monthNav'))
    {
      if(cElem.id.toString() == 'prevMonth')
        this.eventPrevMonth();
      else
        this.eventNextMonth();
    }
  },

  drawCalendar: function ()
  {
    var page   = '${xwiki.getDocument('XWiki.Calendar').getURL('view')}';
    var params = '?year=' + this.selectedYear + '&amp;month=' + this.selectedMonth;
    var html   = '';

    html += '&lt;table id="calendar" cellpadding="0" cellspacing="0"&gt;';
    html += '  &lt;tr&gt;';
    html += '    &lt;th colspan="7" class="calendarHeader"&gt;'
    html += '      &lt;table cellpadding="0" cellspacing="0" width="100%"&gt;';
    html += '        &lt;tr&gt;';
    html += '          &lt;td&gt;';
    html += '            &lt;a href="javascript:void(0)" id="prevMonth" class="monthNav"&gt;&amp;lsaquo;&lt;/a&gt;';
    html += '          &lt;/td&gt;';
    html += '          &lt;td&gt;';
    html += '            &lt;a href="' + page + params + '" class="calTitle"&gt;' + getMonthName(this.selectedMonth) + ' ' + this.selectedYear + '&lt;/a&gt;';
    html += '          &lt;/td&gt;';
    html += '          &lt;td&gt;';
    html += '            &lt;a href="javascript:void(0)" id="nextMonth" class="monthNav"&gt;&amp;rsaquo;&lt;/a&gt;';
    html += '          &lt;/td&gt;';
    html += '        &lt;/tr&gt;';
    html += '      &lt;/table&gt;';
    html += '    &lt;/th&gt;';
    html += '  &lt;/tr&gt;';
    html += '  &lt;tr class="weekDaysTitleRow"&gt;';

    var n = 7;
    for (var j = this.firstDay; j &lt; n; j++)
    {
      html += '&lt;td&gt;' + getDayName(j, true) + '&lt;/td&gt;';

      if (j == 6 &amp;&amp; this.firstDay != 0)
      {
        n = this.firstDay;
        j = -1;
      }
    }

    var classes, other, events, day;

    var currentDay    = new Date().getDate();
    var currentMonth  = new Date().getMonth();
    var currentYear   = new Date().getFullYear();

    var previousMonth = this.dateNavigator(this.selectedMonth, this.selectedYear, '-', 'm');
    var previousYear  = this.dateNavigator(this.selectedMonth, this.selectedYear, '-', 'y');
    var previousDays  = getDaysInMonth(previousYear, previousMonth);
    
    var nextDay       = 1;
    var nextMonth     = this.dateNavigator(currentMonth, currentYear, '+', 'm');
    var nextYear      = this.dateNavigator(currentMonth, currentYear, '+', 'y');;

    var daysNextMonth = getDaysInMonth(this.selectedYear, this.selectedMonth);
    var startDay      = getFirstDayofMonth(this.selectedYear, this.selectedMonth);
    var numRows       = 0;
    var printDate     = 1;

    var evData = this.getEvents
    (
      page,
      (this.dateNavigator(this.selectedMonth, this.selectedYear, '-', 'm') + 1) + '-' + this.dateNavigator(this.selectedMonth, this.selectedYear, '-', 'y') + ',' + 
      (this.selectedMonth                                                  + 1) + '-' + this.selectedYear + ',' + 
      (this.dateNavigator(this.selectedMonth, this.selectedYear, '+', 'm') + 1) + '-' + this.dateNavigator(this.selectedMonth, this.selectedYear, '+', 'y')
    );

    var extra = 0;
    while (((startDay == 6 ? 0:(startDay+1)) + daysNextMonth + extra) % 7 != 0)
      extra++;

    numRows = ((startDay == 6 ? 0:(startDay+1)) + daysNextMonth + extra) / 7; // calculate the number of rows to generate

    // calculate number of days before calendar starts
    if (startDay != this.firstDay)
      var noPrintDays = startDay + 1; 
    else
      var noPrintDays = 0; // if sunday print right away  
    
    // create calendar rows
    for (var e = 0; e &lt; numRows; e++)
    {
      html += '&lt;tr class="weekDaysRow"&gt;';

      // create calendar days
      for (var f = 0; f &lt; 7; f++)
      {
        var today = printDate == currentDay &amp;&amp; this.selectedYear == currentYear &amp;&amp; this.selectedMonth == currentMonth &amp;&amp; noPrintDays == 0;
        var other   = false;
        var events  = false;

        if(noPrintDays &gt; 0 &amp;&amp; startDay != 6)
        {
          params = '?year=' + previousYear + '&amp;month=' + previousMonth + '&amp;day=' + (day = previousDays-startDay+f); 
          events = evData.previous.indexOf(day) != -1 ? true:false;
          other  = true;
        }
        else if (noPrintDays == 0 &amp;&amp; printDate &gt; daysNextMonth)
        {
          params = '?year=' + nextYear + '&amp;month=' + nextMonth + '&amp;day=' + (day = nextDay++);
          events = evData.next.indexOf(day) != -1 ? true:false;
          other  = true;
        }
        else if (noPrintDays == 0 &amp;&amp; printDate &lt;= daysNextMonth)
        {
          params = '?year=' + currentYear + '&amp;month=' + currentMonth + '&amp;day=' + (day = printDate++);
          events = evData.current.indexOf(day) != -1 ? true:false;
        }

        if(noPrintDays &gt; 0)
          noPrintDays--;

        classes = (today ? ' circle':'') + (other ? ' other':'') + (events ? ' dot':'');

        if (day != undefined)
        {
          html += '&lt;td class="weekDaysCell' + classes + '"&gt;&lt;a href="' + page + params + '"&gt;'+ day+'&lt;/a&gt;&lt;/td&gt;';
        }
      }
      html += '&lt;/tr&gt;';
    }
    html += '&lt;/table&gt;';

    $(this.calendarId).update(html);
    $(this.calendarId).setStyle({width: 'auto', height: 'auto', display: 'block'});
  },

  eventPrevMonth: function ()
  {
    var m = this.selectedMonth;
    var y = this.selectedYear;

    this.selectedMonth = this.dateNavigator(m, y, '-', 'm');
    this.selectedYear  = this.dateNavigator(m, y, '-', 'y');

    this.drawCalendar(); 
  },

  eventNextMonth: function ()
  {
    var m = this.selectedMonth;
    var y = this.selectedYear;

    this.selectedMonth = this.dateNavigator(m, y, '+', 'm');
    this.selectedYear  = this.dateNavigator(m, y, '+', 'y');

    this.drawCalendar(); 
  },

  dateNavigator: function(m, y, op, re)
  {
    op == '+' ? m++:m--;

    if (op == '-' &amp;&amp; m &lt; 0)  { m = 11; y--; }
    if (op == '+' &amp;&amp; m &gt; 11) { m = 0;  y++; }

    return re == 'y' ? y:m;
  },

  getEvents: function(url,months)
  {
    request_url = url + '?events=' + months + '&amp;xpage=plain&amp;outputSyntax=plain';
    var xhr = new XMLHttpRequest();

    xhr.onreadystatechange = function()
    {
      if(xhr.readyState==4 &amp;&amp; xhr.status==200)
        content = xhr.responseText;
    }

    xhr.open('GET', request_url, false);
    xhr.send();

    if(content != '' &amp;&amp; (content))
      return JSON.parse(content);
    else
      return false;
  }
});


var calendarHandler = {};

function calendarInit()
{
  calendarHandler = new calendar();
  calendarHandler.drawCalendar();
}

Event.observe(window, 'load', calendarInit);

function getMonthName(month)
{
  var monthNames = new Array('January','February','March','April','May','June','July','August','September','October','November','December');
  return monthNames[month];
}

function getDayName(day, short) {
  var dayNames = new Array('Monday','Tuesday','Wednesday','Thursday','Friday','Saturday','Sunday')
  return short ? dayNames[day].substring(0,2):dayNames[day];
}

function getDaysInMonth(year, month) {
  return 32 - new Date(year, month, 32).getDate();
}

function getFirstDayofMonth(year, month) {
  var day = new Date(year, month, 0).getDay();
  return day;
}</code>
</property>
<property>
<name></name>
</property>
<property>
<parse>1</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.StyleSheetExtension</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<cache>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>cache</name>
<number>5</number>
<prettyName>Caching policy</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>long|short|default|forbid</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</cache>
<code>
<disabled>0</disabled>
<name>code</name>
<number>2</number>
<prettyName>Code</prettyName>
<rows>20</rows>
<size>50</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<name>
<disabled>0</disabled>
<name>name</name>
<number>1</number>
<prettyName>Name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<parse>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>parse</name>
<number>4</number>
<prettyName>Parse content</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</parse>
<use>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>use</name>
<number>3</number>
<prettyName>Use this extension</prettyName>
<relationalStorage>0</relationalStorage>
<separator> </separator>
<separators> ,|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>currentPage=Always on this page|onDemand=On demand|always=Always on this wiki</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</use>
</class>
<name>XWiki.Calendar</name>
<number>0</number>
<className>XWiki.StyleSheetExtension</className>
<guid>4ce0c27c-6ad1-4c89-96ae-42c25cdad914</guid>
<property>
<cache>long</cache>
</property>
<property>
<code>#calendar
{
  clear: both;
  text-align: center;
}

#calendar .circle
{
  background: #f0f0f0;
  border-radius: 20px;
}

#calendar .dot 
{
  background-image: url($doc.getAttachmentURL('dot.png'));
  background-repeat:no-repeat;
  background-position: 11px 18px;
}

#calendar a
{
  color: #555459;
}

#calendar a:hover
{
  text-decoration: none;
}

#calendar .other a
{
  color: #9f9f9f;
}

#calendar, #linksTable
{
  width: 100%;
}

#calendar .calendarHeader
{
  background: #fff;
  padding: 2px 4px;
  height: 20px;
  line-height: 20px;
}

#calendar .calendarHeader a
{
}

#calendar .weekDaysTitleRow
{

}

#calendar .weekDaysRow
{ 
}

#calendar .weekDaysCell
{
  height: 22px;
  width: 22px;
}

#prevMonth
{
  float: left;
  font-size: 20px;
}

#nextMonth
{
  float: right;
  font-size: 20px;
}</code>
</property>
<property>
<name></name>
</property>
<property>
<parse>1</parse>
</property>
<property>
<use>onDemand</use>
</property>
</object>
<object>
<class>
<name>XWiki.WikiMacroClass</name>
<customClass></customClass>
<customMapping></customMapping>
<defaultViewSheet></defaultViewSheet>
<defaultEditSheet></defaultEditSheet>
<defaultWeb></defaultWeb>
<nameField></nameField>
<validationScript></validationScript>
<code>
<disabled>0</disabled>
<name>code</name>
<number>9</number>
<prettyName>Macro code</prettyName>
<rows>20</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</code>
<contentDescription>
<disabled>0</disabled>
<name>contentDescription</name>
<number>8</number>
<prettyName>Content description (Not applicable for "No content" type)</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</contentDescription>
<contentType>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>contentType</name>
<number>7</number>
<prettyName>Macro content type</prettyName>
<relationalStorage>0</relationalStorage>
<separator>|</separator>
<separators>|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>Optional|Mandatory|No content</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</contentType>
<defaultCategory>
<disabled>0</disabled>
<name>defaultCategory</name>
<number>4</number>
<prettyName>Default category</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</defaultCategory>
<description>
<disabled>0</disabled>
<name>description</name>
<number>3</number>
<prettyName>Macro description</prettyName>
<rows>5</rows>
<size>40</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
</description>
<id>
<disabled>0</disabled>
<name>id</name>
<number>1</number>
<prettyName>Macro id</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</id>
<name>
<disabled>0</disabled>
<name>name</name>
<number>2</number>
<prettyName>Macro name</prettyName>
<size>30</size>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.StringClass</classType>
</name>
<supportsInlineMode>
<disabled>0</disabled>
<displayFormType>select</displayFormType>
<displayType>yesno</displayType>
<name>supportsInlineMode</name>
<number>5</number>
<prettyName>Supports inline mode</prettyName>
<unmodifiable>0</unmodifiable>
<classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
</supportsInlineMode>
<visibility>
<cache>0</cache>
<disabled>0</disabled>
<displayType>select</displayType>
<multiSelect>0</multiSelect>
<name>visibility</name>
<number>6</number>
<prettyName>Macro visibility</prettyName>
<relationalStorage>0</relationalStorage>
<separator>|</separator>
<separators>|</separators>
<size>1</size>
<unmodifiable>0</unmodifiable>
<values>Current User|Current Wiki|Global</values>
<classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
</visibility>
</class>
<name>XWiki.Calendar</name>
<number>0</number>
<className>XWiki.WikiMacroClass</className>
<guid>a26408ad-2ec8-4b11-9603-1b80127e670c</guid>
<property>
<code>{{velocity}}
  #set($ok = $xwiki.jsx.use('XWiki.Calendar'))
  #set($ok = $xwiki.ssx.use('XWiki.Calendar'))
  ##
  {{html}}
    &lt;div id="calendarPanel"&gt;&lt;/div&gt;
  {{/html}}
{{/velocity}}</code>
</property>
<property>
<contentDescription></contentDescription>
</property>
<property>
<contentType>Optional</contentType>
</property>
<property>
<defaultCategory></defaultCategory>
</property>
<property>
<description></description>
</property>
<property>
<id>calendarPanel</id>
</property>
<property>
<name></name>
</property>
<property>
<supportsInlineMode></supportsInlineMode>
</property>
<property>
<visibility>Global</visibility>
</property>
</object>
<content>{{velocity}}
###################
## Configuration ##
###################
##
#set($source         = 'class') ##json/class
##
#set($json           = 'Calendar.ExampleJSON')
#set($className      = 'Blog.BlogPostClass')
#set($classDateField = 'publishDate')
##
######################
## Display calendar ##
######################
##
#if("$!request.year" != '' &amp;&amp; "$!request.month" != '')


{{calendar
  #if($source == 'json')
    json = "$json"
  #else
    classname  = "$className"
    startfield = "$classDateField"
  #end
  #if("$!request.day" != '')  
    defaultView = "agendaDay"
  #end
  editable = "false"
  year     = "$request.year"
  month    = "$request.month"
  date     = "#if("$!request.day" != '')$request.day#{else}1#{end}" 
/}}

##
###################
## Generate JSON ##
###################
##
#elseif("$!request.events" != '' &amp;&amp; "$!request.xpage" == 'plain')
  $response.setContentType('application/json')
  ##
  #set ($months   = $request.events.split(','))
  #set ($previous = [])
  #set ($current  = [])
  #set ($next     = [])
  ##
  #if ("$source" == 'json')
    #set ($jsonURL = "$xwiki.getDocument($json).getExternalURL('get', 'xpage=plain&amp;outputSyntax=plain')")
    #set ($jsonData = $xwiki.getURLContent($jsonURL))
    #set ($res = $jsontool.parse($jsonData))
  #elseif ("$source" == 'class')
    #set($hql = "select doc.fullName from XWikiDocument doc, BaseObject obj, DateProperty prop where doc.fullName=obj.name and obj.className='$className' and prop.id.id=obj.id and prop.name='$classDateField'")
    #set($res = $xwiki.wrapDocs($xwiki.search($hql, 0, 0)))
  #end
  #foreach ($r in $res)
    #if ("$source" == 'json')
      #set($rDate = $datetool.toDate('yyyy-M-d', $r.get('start')))
    #elseif ("$source" == 'class')
      #set($rDate = $r.getObject($className).getProperty($classDateField).value)
    #end
    ##
    #set($monthYear = $datetool.format('M-yyyy', $rDate))
    #set($day       = $datetool.format('d', $rDate))
    ##
    #if ($monthYear == $months[0] &amp;&amp; !$previous.contains($day))
      #set($ok = $previous.add($day))
    #elseif ($monthYear == $months[1] &amp;&amp; !$current.contains($day))
      #set($ok = $current.add($day))
    #elseif ($monthYear == $months[2] &amp;&amp; !$next.contains($day))
      #set($ok = $next.add($day))
    #end
  #end
{
"previous" : $previous,
"current"  : $current,
"next"     : $next
}
#end
{{/velocity}}</content></xwikidoc>
